# This is a basic workflow to help you get started with Actions

name: Pipeline MuleSoft CI/CD

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [develop]
  push:
    branches: [develop]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: mule-cicd-${{ github.ref }}
  cancel-in-progress: true

env:
  # Valores por defecto; puedes sobrescribirlos en 'deploy' si lo prefieres
  MULE_APP_NAME: my-mule-app
  MULE_RUNTIME: 4.6-java11
  MULE_WORKERS: 1
  MULE_WORKER_SIZE: 0.1
  MULE_REGION: us-east-1
  SKIP_TESTS: 'true'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Node.js (para Anypoint CLI)
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      
      - name: Cache Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-

      - name: Set up Java (para Maven / build)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
      
      - name: Build with Maven
        run: mvn -B clean package -DskipTests=${{ env.SKIP_TESTS }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: mule-artifact
          path: target/*.jar
